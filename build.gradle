/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

buildscript {
    repositories {
        google()
	    mavenLocal()
    }
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'maven-publish'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    implementation 'com.google.guava:guava:26.0-jre'
    implementation 'org.antlr:antlr4-runtime:4.9.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
    implementation 'com.madgag.spongycastle:core:1.58.0.0'
    implementation 'com.madgag.spongycastle:prov:1.58.0.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.0'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.0'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.0'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'info.picocli:picocli:4.5.2'

    // Use JUnit test framework
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'
	testImplementation 'ch.qos.logback:logback-classic:1.2.3'
	testImplementation 'org.web3j:core:5.0.0'
	testImplementation 'org.web3j:abi:5.0.0'
    	
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter:5.7.0'
	testRuntimeOnly 'ch.qos.logback:logback-classic:1.2.3'
}

jar {
    manifest {
        attributes "Main-Class": "org.elastos.did.util.Main"
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes "Main-Class": "org.elastos.did.util.Main"
    }
    
    archiveBaseName = 'did'
    from { configurations.testRuntimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

javadoc {
    options.setLocale('en_US')
    options.showFromPublic()
	options.links 'https://docs.oracle.com/en/java/javase/11/docs/api/'
	exclude 'org/bitcoinj/**'
	exclude 'org/elastos/did/crypto'
	exclude 'org/elastos/did/parser'
	exclude 'org/elastos/did/util'
}

test {
    useJUnitPlatform()

    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.elastos.did'
            artifactId = 'didsdk'
            //version = '1.0.0'

            from components.java

            pom {
                name = 'Elastos DID SDK'
                description = 'Elastos decentralized identity library'
                url = 'https://www.elastos.org/'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/elastos/Elastos.DID.Java.SDK/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'elastos'
                        name = 'Elastos Foundation'
                        email = 'support@elastos.org'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/elastos/Elastos.DID.Java.SDK.git'
                    developerConnection = 'scm:git:ssh://github.com/elastos/Elastos.DID.Java.SDK.git'
                    url = 'http://github.com/elastos/Elastos.DID.Java.SDK'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "$buildDir/repos/releases/$version"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots/$version"
            url = project.hasProperty('release') ? releasesRepoUrl : snapshotsRepoUrl
        }
    }
}